[gcode_macro g27]
description: Parks the toolhead.
  Usage: G27 [P=<0|1|2>]
gcode:
  # Wraps any arguments for the PARK macro and defaults P=0 for Marlin compat.
  PARK P={params.P|default(0)} {% for k in params|reject("in", "GP") %}{
    ' '~k~'="'~params[k]~'"'
    }{% endfor %}

[gcode_macro G29]
description: Bed Mesh Calibrate
gcode: BED_MESH_CALIBRATE {raw_params}

[gcode_macro M76]                                                               # Marlin Compatibility
gcode:
    PAUSE

[gcode_macro M92]
gcode:
    {% set extruder_steps = params.E|default(0.0025)|float %}
    SET_EXTRUDER_STEP_DISTANCE DISTANCE={extruder_steps}

[gcode_macro M125]
description: Map M125 to PARK
gcode:
    PARK {rawparams}

[gcode_macro M204]
description: Map M204 to SET_VELOCITY_LIMIT for ACCEL
rename_existing: M204.1
gcode:
    {% if 'S' in params %}
        {% set S = params.S|float %}
        SET_VELOCITY_LIMIT ACCEL={S}
    {% endif %}

[gcode_macro M205]
description: Map M205 to SET_VELOCITY_LIMIT for SQUARE_CORNER_VELOCITY
gcode:
    {% if 'X' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
    {% elif 'Y' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
    {% endif %}

[gcode_macro M300]                                                              # Marlin Compatibility
gcode:
    BEEP

[gcode_macro M486]
gcode:
    # Parameters known to M486 are as follows:
    #   [C<flag>] Cancel the current object
    #   [P<index>] Cancel the object with the given index
    #   [S<index>] Set the index of the current object.
    #       If the object with the given index has been canceled, this will cause
    #       the firmware to skip to the next object. The value -1 is used to
    #       indicate something that isn’t an object and shouldn’t be skipped.
    #   [T<count>] Reset the state and set the number of objects
    #   [U<index>] Un-cancel the object with the given index. This command will be
    #       ignored if the object has already been skipped

    {% if 'exclude_object' not in printer %}
        {action_raise_error("[exclude_object] is not enabled")}
    {% endif %}

    {% if 'T' in params %}
        EXCLUDE_OBJECT RESET=1

        {% for i in range(params.T | int) %}
            EXCLUDE_OBJECT_DEFINE NAME={i}
        {% endfor %}
    {% endif %}

    {% if 'C' in params %}
        EXCLUDE_OBJECT CURRENT=1
    {% endif %}

    {% if 'P' in params %}
        EXCLUDE_OBJECT NAME={params.P}
    {% endif %}

    {% if 'S' in params %}
        {% if params.S == '-1' %}
            {% if printer.exclude_object.current_object %}
                EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
            {% endif %}
        {% else %}
            EXCLUDE_OBJECT_START NAME={params.S}
        {% endif %}
    {% endif %}

    {% if 'U' in params %}
        EXCLUDE_OBJECT RESET=1 NAME={params.U}
    {% endif %}

[gcode_macro M500]
gcode:
    SAVE_CONFIG
    
[gcode_macro M600]
description: Map M600 to CHANGE_FILAMENT
gcode:
    CHANGE_FILAMENT

[gcode_macro M601]                                                              # Prusa Compatibility
gcode:
    PAUSE

[gcode_macro M701]
description: Map M701 to LOAD_FILAMENT
gcode:
    LOAD_FILAMENT

[gcode_macro M702]
description: Map M702 to UNLOAD_FILAMENT
gcode:
    UNLOAD_FILAMENT

[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M900]
description: Map M900 to SET_PRESSURE_ADVANCE
gcode:
    {% if 'K' in params %}
        {% if 'E' in params %}
            SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
        {% else %}
            SET_PRESSURE_ADVANCE ADVANCE={params.K}
        {% endif %}
    {% endif %}



